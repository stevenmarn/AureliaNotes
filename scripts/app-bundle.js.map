{"version":3,"sources":["app.js","environment.js","main.js","welcome.js","backend/database.js","backend/server.js","notebooks/index.js","resources/index.js","settings/index.js"],"names":["App","configureRouter","config","router","title","map","route","moduleId","name","nav","href","settings","icon","activationStrategy","invokeLifecycle","debug","testing","configure","aurelia","use","standardConfiguration","feature","plugin","developmentLogging","start","then","setRoot","Welcome","lastId","nextId","defaultNotebook","id","database","notebooks","notes","notebookId","body","Server","newNote","hasChanged","a","b","getNoteList","filter","results","x","parseInt","Promise","resolve","getNote","found","find","JSON","parse","stringify","getNotebookList","saveNote","note","existing","push","Object","assign","createNotebook","notebook","NotebooksIndex","server","notebookName","activate","notebookList","SettingsIndex","firstName","lastName","submit","alert"],"mappings":"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","file":"app-bundle.js","sourcesContent":["import {activationStrategy} from 'aurelia-router';\n\nexport class App {\n  configureRouter(config, router){\n    config.title = 'Aurelia Notes';\n    config.map([\n      { route: '', moduleId: 'welcome' },\n      {\n        name: 'notes',\n        route: 'notes',\n        moduleId: 'notes/index',\n        nav: true,\n        title:'Notes',\n        href: '#/notes?filter=none',\n        settings: { icon:'file-text' },\n        activationStrategy: activationStrategy.invokeLifecycle\n      },\n      { route: 'notebooks', moduleId: 'notebooks/index', nav: true, title: 'Notebooks', settings: { icon:'book' } },\n      { route: 'help', moduleId: 'help/index', nav: true, title: \"Help\", settings: { icon: 'question'}},\n      { route: 'settings',  moduleId: 'settings/index', nav: true, title: 'Settings', settings: { icon:'cog' } }\n    ]);\n\n    this.router = router;\n  }\n}\n","export default {\n  debug: true,\n  testing: true\n};\n","import environment from './environment';\n\nexport function configure(aurelia) {\n\n  aurelia.use\n    .standardConfiguration()\n    .feature('resources')\n    .plugin('aurelia-animator-css');\n    \n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","export class Welcome {}\n","let lastId = 0;\n\nfunction nextId() {\n  return ++lastId;\n}\n\nlet defaultNotebook = {\n  id: nextId(),\n  title: 'My Notes'\n};\n\nexport const database = {\n  nextId: nextId,\n  notebooks: [\n    defaultNotebook\n  ],\n  notes: [\n    {\n      id: nextId(),\n      notebookId: defaultNotebook.id,\n      title: 'Sample Note',\n      body: 'This is a sample note. You can type details in here!'\n    }\n  ]\n};\n","import {database} from './database';\n\nexport class Server {\n  newNote() {\n    return {\n      title: 'New Note',\n      body: '',\n      notebookId: database.notebooks[0].id\n    };\n  }\n\n  hasChanged(a, b) {\n    return a.title !== b.title || a.body !== b.body || a.notebookId !== b.notebookId;\n  }\n\n  getNoteList(filter) {\n    let results = filter && filter !== 'none'\n      ? database.notes.filter(x => x.notebookId === parseInt(filter))\n      : database.notes;\n\n    results = results.map(x => ({\n      id: x.id,\n      title: x.title,\n      body: x.body\n    }));\n\n    return Promise.resolve(results);\n  }\n\n  getNote(id) {\n    let found = database.notes.find(x => x.id == id);\n    return Promise.resolve(found ? JSON.parse(JSON.stringify(found)) : null);\n  }\n\n  getNotebookList() {\n    return Promise.resolve(database.notebooks.map(x => ({\n      id: x.id,\n      title: x.title\n    })));\n  }\n\n  saveNote(note) {\n    let existing;\n\n    if(note.id) {\n      existing = database.notes.find(x => x.id === note.id);\n    } else {\n      existing = {id: database.nextId()};\n      database.notes.push(existing);\n    }\n\n    Object.assign(existing, note);\n    return Promise.resolve(JSON.parse(JSON.stringify(existing)));\n  }\n\n  createNotebook(name) {\n    let notebook = {\n      id: database.nextId(),\n      title: name\n    };\n\n    database.notebooks.push(notebook);\n\n    return Promise.resolve(JSON.parse(JSON.stringify(notebook)));\n  }\n}\n","import {Server} from 'backend/server';\nimport {inject} from 'aurelia-framework';\n\n@inject(Server)\nexport class NotebooksIndex {\n  constructor(server) {\n    this.server = server;\n    this.notebookName = '';\n  }\n\n  activate() {\n    return this.server.getNotebookList().then(x => this.notebookList = x);\n  }\n\n  createNotebook() {\n    if (!this.notebookName) {\n      return;\n    }\n\n    this.server.createNotebook(this.notebookName).then(notebook => {\n      this.notebookName = '';\n      this.notebookList.push(notebook);\n    });\n  }\n}\n","export function configure(config) {\n  //config.globalResources([]);\n}\n","export class SettingsIndex {\n  constructor() {\n    this.firstName = 'John';\n    this.lastName = 'Doe';  \n  }\n\n  get fullName() {\n    return this.firstName + ' ' + this.lastName;\n  }\n\n  submit() {\n    alert('Settings saved!');\n  }\n}\n"],"sourceRoot":".."}